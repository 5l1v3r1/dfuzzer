.\" **************************************************************************
.\" *
.\" * dfuzzer
.\" * Copyright(C) 2013, Red Hat, Inc., Matus Marhefka <mmarhefk@redhat.com>
.\" *
.\" * This program is free software: you can redistribute it and/or modify
.\" * it under the terms of the GNU General Public License as published by
.\" * the Free Software Foundation, either version 3 of the License, or
.\" * (at your option) any later version.
.\" *
.\" * This program is distributed in the hope that it will be useful,
.\" * but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
.\" * GNU General Public License for more details.
.\" *
.\" * You should have received a copy of the GNU General Public License
.\" * along with this program. If not, see <http://www.gnu.org/licenses/>.
.\" *
.\" **************************************************************************
.TH man 1 "15 August 2013" "dfuzzer 1.2" "dfuzzer"
.SH NAME
dfuzzer \- Tool for fuzz testing processes communicating through D-Bus
.SH SYNOPSIS
.B dfuzzer
.B \-n
\fIBUS_NAME\fR
[\fIOTHER_OPTIONS\fR]


.SH DESCRIPTION
\fBdfuzzer\fR is D-Bus fuzzer, a tool for fuzz testing processes communicating
through D-Bus. The fuzzer traverses through all the methods on the given bus name.
By default only failures and warnings are printed. Use -v for verbose mode.

Fuzz tests are being done on methods of a chosen interface(s) and an object(s)
for the given bus name. Fuzzer generates random arguments for each method
of an interface and calls these methods everytime with different generated arguments.

dfuzzer is monitoring tested process state and memory usage during fuzz testing.
In case tested process crashes or its memory usage is abnormal it is printed
on the output of dfuzzer.


.SH REQUIRED OPTIONS
.PP
\fB\-n\fR \fIBUS_NAME\fR
.RS 4
D-Bus name to test.
.RE


.SH OTHER OPTIONS
.PP
\fB\-V\fR
.RS 4
Print dfuzzer version and exit.
.RE
.PP
\fB\-h\fR
.RS 4
Print dfuzzer help and exit.
.RE
.PP
\fB\-l\fR
.RS 4
List all available connection names on both buses.
.RE
.PP
\fB\-v\fR
.RS 4
Enable verbose messages.
.RE
.PP
\fB\-d\fR
.RS 4
Enable debug messages. Implies -v. This option is for developers and should
not be normally used during testing.
.RE
.PP
\fB\-o\fR \fIOBJECT_PATH\fR
.RS 4
Optional object path to test. All children objects are traversed.
.RE
.PP
\fB\-i\fR \fIINTERFACE\fR
.RS 4
Interface to test. Requires also -o option.
.RE
.PP
\fB\-m\fR \fIMEM_LIMIT\fR [in kB]
.RS 4
When tested process exceeds this limit it will be noted into log file.
Default value for this limit is 3x process intial memory size. If set memory
limit value is less than or equal to process initial memory size, it will be
adjusted to the default value (3x process intial memory size).
.RE
.PP
\fB\-b\fR \fImax_buf_size\fR [in B]
.RS 4
Maximum buffer size for generated strings, minimum is 256 B.
Default maximum size is 50000 B ~= 50 kB (the greater the limit, the longer
testing).
.RE
.PP
\fB\-t\fR \fIMETHOD_NAME\fR
.RS 4
When this parameter is provided, only method \fIMETHOD_NAME\fR is tested.
All other methods of an interface are skipped.
DO NOT USE IN AUTOMATIC SCRIPTS, AS IT NEEDS TO BE USUALLY TERMINATED BY SIGINT!
.RE


.SH EXIT STATUS
dfuzzer may return these codes:

0    testing ended successfuly
.RE
1    error occured
.RE
2    testing detected failures
.RE

.SH SEE ALSO
gdbus(1)

.SH BUGS
No known bugs.

.SH AUTHOR
Matus Marhefka (mmarhefk@redhat.com)
.RE
Additional changes by Miroslav Vadkerti (mvadkert@redhat.com)

.SH COPYRIGHT
2013, Red Hat, Inc.
